{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\4bul04kka\\\\lunaris\\\\restlun\\\\Project-for-TP\\\\Lunaris\\\\client\\\\src\\\\components\\\\pages\\\\events\\\\Events.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"./events.css\";\nimport PostList from \"../../ui/postform/PostList\";\nimport PostForm from \"../../ui/postform/PostForm\";\nimport PostFilter from \"../../ui/postform/PostFilter\";\nimport MyModal from \"../../ui/modal/MyModal\";\nimport MyButton from \"../../ui/button/MyButton\";\nimport { usePosts } from \"../../hooks/usePosts\";\nimport PostService from \"../../../API/PostService\";\nimport Loader from \"../../ui/loader/Loader\";\nimport { useFetching } from \"../../hooks/useFetching\";\nimport { getPageCount } from \"../../../utils/pages\";\nimport Pagination from \"../../ui/pagination/Pagination\";\nimport { AuthContext } from \"../../../context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Events() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    isAuth\n  } = useContext(AuthContext);\n  const [allPosts, setAllPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]); // For filtered posts\n  const [filter, setFilter] = useState({\n    sort: \"\",\n    query: \"\"\n  });\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(5);\n  const [page, setPage] = useState(() => {\n    const savedPage = localStorage.getItem(\"currentPage\");\n    return savedPage ? JSON.parse(savedPage) : 1;\n  });\n  const [modal, setModal] = useState(false);\n  const [fetchPosts, arePostsLoading, postError] = useFetching(async () => {\n    const response = await PostService.getAll(); // Fetch all posts, not just for current page\n    setAllPosts(response.posts);\n  });\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"currentPage\", JSON.stringify(page));\n  }, [page]);\n\n  // Update filtered posts and pagination when filter changes\n  _s(useEffect(_s(() => {\n    _s();\n    const filtered = usePosts(allPosts, filter.sort, filter.query);\n    setFilteredPosts(filtered);\n    const totalCount = filtered.length;\n    setTotalPages(getPageCount(totalCount, limit));\n    if (page > Math.ceil(totalCount / limit)) {\n      setPage(1); // Reset page if current page exceeds total pages after filtering\n    }\n  }, \"48DCEpBOvC7IGgP3TO0wBeTauqE=\", false, function () {\n    return [usePosts];\n  }), [filter, allPosts, limit, page]), \"48DCEpBOvC7IGgP3TO0wBeTauqE=\", false, function () {\n    return [usePosts];\n  });\n  const createPost = async newPost => {\n    try {\n      await PostService.createPost(newPost);\n      setModal(false);\n      fetchPosts(); // Refresh posts after creation\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n  const removePost = async post => {\n    try {\n      await PostService.deletePost(post.id);\n      setAllPosts(allPosts.filter(p => p.id !== post.id));\n    } catch (error) {\n      console.error(\"Ошибка при удалении поста:\", error);\n    }\n  };\n  const changePage = newPage => {\n    setPage(newPage);\n  };\n  const paginatedPosts = filteredPosts.slice((page - 1) * limit, page * limit);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"events\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [isAuth && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(MyButton, {\n            onClick: fetchPosts,\n            children: \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n            onClick: () => setModal(true),\n            children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n            visible: modal,\n            setVisible: setModal,\n            children: /*#__PURE__*/_jsxDEV(PostForm, {\n              create: createPost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n          filter: filter,\n          setFilter: setFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), postError && /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 \", postError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), arePostsLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(PostList, {\n          remove: removePost,\n          posts: paginatedPosts,\n          title: \"Новости и мероприятия\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pag\",\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            page: page,\n            changePage: changePage,\n            totalPages: totalPages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s2(Events, \"50Zkh5aPOT3dQHrNhBupTgrS/SU=\", false, function () {\n  return [useFetching];\n});\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","useState","useEffect","useContext","PostList","PostForm","PostFilter","MyModal","MyButton","usePosts","PostService","Loader","useFetching","getPageCount","Pagination","AuthContext","jsxDEV","_jsxDEV","Events","_s2","_s","$RefreshSig$","isAuth","allPosts","setAllPosts","filteredPosts","setFilteredPosts","filter","setFilter","sort","query","totalPages","setTotalPages","limit","setLimit","page","setPage","savedPage","localStorage","getItem","JSON","parse","modal","setModal","fetchPosts","arePostsLoading","postError","response","getAll","posts","setItem","stringify","filtered","totalCount","length","Math","ceil","createPost","newPost","error","console","removePost","post","deletePost","id","p","changePage","newPage","paginatedPosts","slice","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","visible","setVisible","create","remove","title","_c","$RefreshReg$"],"sources":["C:/Users/4bul04kka/lunaris/restlun/Project-for-TP/Lunaris/client/src/components/pages/events/Events.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./events.css\";\r\nimport PostList from \"../../ui/postform/PostList\";\r\nimport PostForm from \"../../ui/postform/PostForm\";\r\nimport PostFilter from \"../../ui/postform/PostFilter\";\r\nimport MyModal from \"../../ui/modal/MyModal\";\r\nimport MyButton from \"../../ui/button/MyButton\";\r\nimport { usePosts } from \"../../hooks/usePosts\";\r\nimport PostService from \"../../../API/PostService\";\r\nimport Loader from \"../../ui/loader/Loader\";\r\nimport { useFetching } from \"../../hooks/useFetching\";\r\nimport { getPageCount } from \"../../../utils/pages\";\r\nimport Pagination from \"../../ui/pagination/Pagination\";\r\nimport { AuthContext } from \"../../../context\";\r\n\r\nfunction Events() {\r\n  const { isAuth } = useContext(AuthContext);\r\n  const [allPosts, setAllPosts] = useState([]);\r\n  const [filteredPosts, setFilteredPosts] = useState([]); // For filtered posts\r\n  const [filter, setFilter] = useState({ sort: \"\", query: \"\" });\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [limit, setLimit] = useState(5);\r\n  const [page, setPage] = useState(() => {\r\n    const savedPage = localStorage.getItem(\"currentPage\");\r\n    return savedPage ? JSON.parse(savedPage) : 1;\r\n  });\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const [fetchPosts, arePostsLoading, postError] = useFetching(async () => {\r\n    const response = await PostService.getAll(); // Fetch all posts, not just for current page\r\n    setAllPosts(response.posts);\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"currentPage\", JSON.stringify(page));\r\n  }, [page]);\r\n\r\n  // Update filtered posts and pagination when filter changes\r\n  useEffect(() => {\r\n    const filtered = usePosts(allPosts, filter.sort, filter.query);\r\n    setFilteredPosts(filtered);\r\n\r\n    const totalCount = filtered.length;\r\n    setTotalPages(getPageCount(totalCount, limit));\r\n\r\n    if (page > Math.ceil(totalCount / limit)) {\r\n      setPage(1); // Reset page if current page exceeds total pages after filtering\r\n    }\r\n  }, [filter, allPosts, limit, page]);\r\n\r\n  const createPost = async (newPost) => {\r\n    try {\r\n      await PostService.createPost(newPost);\r\n      setModal(false);\r\n      fetchPosts(); // Refresh posts after creation\r\n    } catch (error) {\r\n      console.error(\"Error creating post:\", error);\r\n    }\r\n  };\r\n\r\n  const removePost = async (post) => {\r\n    try {\r\n      await PostService.deletePost(post.id);\r\n      setAllPosts(allPosts.filter((p) => p.id !== post.id));\r\n    } catch (error) {\r\n      console.error(\"Ошибка при удалении поста:\", error);\r\n    }\r\n  };\r\n\r\n  const changePage = (newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const paginatedPosts = filteredPosts.slice((page - 1) * limit, page * limit);\r\n\r\n  return (\r\n    <div className='events'>\r\n      <div className='container'>\r\n        <div>\r\n          {isAuth && (\r\n            <div>\r\n              <MyButton onClick={fetchPosts}>Запросить посты</MyButton>\r\n              <MyButton onClick={() => setModal(true)}>\r\n                Создать новость\r\n              </MyButton>\r\n              <MyModal visible={modal} setVisible={setModal}>\r\n                <PostForm create={createPost} />\r\n              </MyModal>\r\n            </div>\r\n          )}\r\n\r\n          <PostFilter filter={filter} setFilter={setFilter} />\r\n          {postError && <h1>Произошла ошибка {postError}</h1>}\r\n          {arePostsLoading ? (\r\n            <div className='loading'>\r\n              <Loader />\r\n            </div>\r\n          ) : (\r\n            <PostList\r\n              remove={removePost}\r\n              posts={paginatedPosts}\r\n              title={\"Новости и мероприятия\"}\r\n            />\r\n          )}\r\n          <div className='pag'>\r\n            <Pagination\r\n              page={page}\r\n              changePage={changePage}\r\n              totalPages={totalPages}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Events;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}