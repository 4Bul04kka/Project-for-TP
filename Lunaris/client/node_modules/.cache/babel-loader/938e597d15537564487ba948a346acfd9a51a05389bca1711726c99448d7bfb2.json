{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\4bul04kka\\\\lunaris\\\\restlun\\\\Project-for-TP\\\\Lunaris\\\\client\\\\src\\\\components\\\\pages\\\\events\\\\Events.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\nimport \"./events.css\";\nimport PostList from \"../../ui/postform/PostList\";\nimport PostForm from \"../../ui/postform/PostForm\";\nimport PostFilter from \"../../ui/postform/PostFilter\";\nimport MyModal from \"../../ui/modal/MyModal\";\nimport MyButton from \"../../ui/button/MyButton\";\nimport { usePosts } from \"../../hooks/usePosts\";\nimport PostService from \"../../../API/PostService\";\nimport Loader from \"../../ui/loader/Loader\";\nimport { useFetching } from \"../../hooks/useFetching\";\nimport { getPageCount } from \"../../../utils/pages\";\nimport { AuthContext } from \"../../../context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Events() {\n  _s();\n  const {\n    isAuth\n  } = useContext(AuthContext);\n  const [allPosts, setAllPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: \"\",\n    query: \"\"\n  });\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(5);\n  const [page, setPage] = useState(1); // Убрали логику с localStorage\n  const [modal, setModal] = useState(false);\n  const lastElement = useRef();\n  const observer = useRef();\n  const [fetchPosts, arePostsLoading, postError] = useFetching(async (limit, page) => {\n    const response = await PostService.getAll(limit, page);\n    setAllPosts(prevPosts => [...prevPosts, ...response.posts]); // Добавляем новые посты к уже существующим\n    const totalCount = response.totalCount;\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n  useEffect(() => {\n    if (arePostsLoading) return;\n    if (observer.current) observer.current.disconnect();\n    const callback = function (entries) {\n      if (entries[0].isIntersecting && page < totalPages) {\n        setPage(prevPage => prevPage + 1); // Увеличиваем страницу\n      }\n    };\n    observer.current = new IntersectionObserver(callback);\n    observer.current.observe(lastElement.current);\n  }, [arePostsLoading]);\n  useEffect(() => {\n    fetchPosts(limit, page);\n  }, [limit, page]);\n  const createPost = async newPost => {\n    try {\n      await PostService.createPost(newPost);\n      setModal(false);\n      setAllPosts([]); // Очистить список перед новой загрузкой\n      setPage(1); // Сбросить страницу\n      fetchPosts(limit, 1); // Загрузить заново с первой страницы\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n  const removePost = async post => {\n    try {\n      await PostService.deletePost(post.id);\n      setAllPosts(allPosts.filter(p => p.id !== post.id));\n    } catch (error) {\n      console.error(\"Ошибка при удалении поста:\", error);\n    }\n  };\n  const sortedAndSearchedPosts = usePosts(allPosts, filter.sort, filter.query);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"events\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [isAuth && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(MyButton, {\n            onClick: () => setModal(true),\n            children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n            visible: modal,\n            setVisible: setModal,\n            children: /*#__PURE__*/_jsxDEV(PostForm, {\n              create: createPost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n          filter: filter,\n          setFilter: setFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), postError && /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 \", postError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(PostList, {\n          remove: removePost,\n          posts: sortedAndSearchedPosts,\n          title: \"Новости и мероприятия\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: lastElement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), arePostsLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(Events, \"2crdvU9ydxMqeN8hy1QRYa2e4uI=\", false, function () {\n  return [useFetching, usePosts];\n});\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","PostList","PostForm","PostFilter","MyModal","MyButton","usePosts","PostService","Loader","useFetching","getPageCount","AuthContext","jsxDEV","_jsxDEV","Events","_s","isAuth","allPosts","setAllPosts","filter","setFilter","sort","query","totalPages","setTotalPages","limit","setLimit","page","setPage","modal","setModal","lastElement","observer","fetchPosts","arePostsLoading","postError","response","getAll","prevPosts","posts","totalCount","current","disconnect","callback","entries","isIntersecting","prevPage","IntersectionObserver","observe","createPost","newPost","error","console","removePost","post","deletePost","id","p","sortedAndSearchedPosts","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","visible","setVisible","create","remove","title","ref","_c","$RefreshReg$"],"sources":["C:/Users/4bul04kka/lunaris/restlun/Project-for-TP/Lunaris/client/src/components/pages/events/Events.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport \"./events.css\";\r\nimport PostList from \"../../ui/postform/PostList\";\r\nimport PostForm from \"../../ui/postform/PostForm\";\r\nimport PostFilter from \"../../ui/postform/PostFilter\";\r\nimport MyModal from \"../../ui/modal/MyModal\";\r\nimport MyButton from \"../../ui/button/MyButton\";\r\nimport { usePosts } from \"../../hooks/usePosts\";\r\nimport PostService from \"../../../API/PostService\";\r\nimport Loader from \"../../ui/loader/Loader\";\r\nimport { useFetching } from \"../../hooks/useFetching\";\r\nimport { getPageCount } from \"../../../utils/pages\";\r\nimport { AuthContext } from \"../../../context\";\r\n\r\nfunction Events() {\r\n  const { isAuth } = useContext(AuthContext);\r\n  const [allPosts, setAllPosts] = useState([]);\r\n  const [filter, setFilter] = useState({ sort: \"\", query: \"\" });\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [limit, setLimit] = useState(5);\r\n  const [page, setPage] = useState(1); // Убрали логику с localStorage\r\n  const [modal, setModal] = useState(false);\r\n  const lastElement = useRef();\r\n  const observer = useRef();\r\n\r\n  const [fetchPosts, arePostsLoading, postError] = useFetching(\r\n    async (limit, page) => {\r\n      const response = await PostService.getAll(limit, page);\r\n      setAllPosts((prevPosts) => [...prevPosts, ...response.posts]); // Добавляем новые посты к уже существующим\r\n      const totalCount = response.totalCount;\r\n      setTotalPages(getPageCount(totalCount, limit));\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (arePostsLoading) return;\r\n    if (observer.current) observer.current.disconnect();\r\n\r\n    const callback = function (entries) {\r\n      if (entries[0].isIntersecting && page < totalPages) {\r\n        setPage((prevPage) => prevPage + 1); // Увеличиваем страницу\r\n      }\r\n    };\r\n\r\n    observer.current = new IntersectionObserver(callback);\r\n    observer.current.observe(lastElement.current);\r\n  }, [arePostsLoading]);\r\n\r\n  useEffect(() => {\r\n    fetchPosts(limit, page);\r\n  }, [limit, page]);\r\n\r\n  const createPost = async (newPost) => {\r\n    try {\r\n      await PostService.createPost(newPost);\r\n      setModal(false);\r\n      setAllPosts([]); // Очистить список перед новой загрузкой\r\n      setPage(1); // Сбросить страницу\r\n      fetchPosts(limit, 1); // Загрузить заново с первой страницы\r\n    } catch (error) {\r\n      console.error(\"Error creating post:\", error);\r\n    }\r\n  };\r\n\r\n  const removePost = async (post) => {\r\n    try {\r\n      await PostService.deletePost(post.id);\r\n      setAllPosts(allPosts.filter((p) => p.id !== post.id));\r\n    } catch (error) {\r\n      console.error(\"Ошибка при удалении поста:\", error);\r\n    }\r\n  };\r\n\r\n  const sortedAndSearchedPosts = usePosts(allPosts, filter.sort, filter.query);\r\n\r\n  return (\r\n    <div className='events'>\r\n      <div className='container'>\r\n        <div>\r\n          {isAuth && (\r\n            <div>\r\n              <MyButton onClick={() => setModal(true)}>\r\n                Создать новость\r\n              </MyButton>\r\n              <MyModal visible={modal} setVisible={setModal}>\r\n                <PostForm create={createPost} />\r\n              </MyModal>\r\n            </div>\r\n          )}\r\n\r\n          <PostFilter filter={filter} setFilter={setFilter} />\r\n          {postError && <h1>Произошла ошибка {postError}</h1>}\r\n          <PostList\r\n            remove={removePost}\r\n            posts={sortedAndSearchedPosts}\r\n            title={\"Новости и мероприятия\"}\r\n          />\r\n          <div ref={lastElement}></div>\r\n          {arePostsLoading && (\r\n            <div className='loading'>\r\n              <Loader />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Events;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}