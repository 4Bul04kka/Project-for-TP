{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\4bul04kka\\\\lunaris\\\\client\\\\src\\\\components\\\\pages\\\\events\\\\Events.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./events.css\";\nimport PostList from \"../../ui/postform/PostList\";\nimport PostForm from \"../../ui/postform/PostForm\";\nimport PostFilter from \"../../ui/postform/PostFilter\";\nimport MyModal from \"../../ui/modal/MyModal\";\nimport MyButton from \"../../ui/button/MyButton\";\nimport { usePosts } from \"../../hooks/usePosts\";\nimport PostService from \"../../../API/PostService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Events() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: \"\",\n    query: \"\"\n  });\n  const [modal, setModal] = useState(false);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n  const [arePostsLoading, setPostsAreLoading] = useState(false);\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n  async function fetchPosts() {\n    const posts = await PostService.getAll();\n    setPosts(posts);\n  }\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"events\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MyButton, {\n          onClick: fetchPosts,\n          children: \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n          onClick: () => setModal(true),\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n          visible: modal,\n          setVisible: setModal,\n          children: /*#__PURE__*/_jsxDEV(PostForm, {\n            create: createPost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n          filter: filter,\n          setFilter: setFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostList, {\n          remove: removePost,\n          posts: sortedAndSearchedPosts,\n          title: \"Новости и мероприятия\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Events, \"SuO7uYqMvQmB45zBmFfNJm4kGvw=\", false, function () {\n  return [usePosts];\n});\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","Link","PostList","PostForm","PostFilter","MyModal","MyButton","usePosts","PostService","jsxDEV","_jsxDEV","Events","_s","posts","setPosts","filter","setFilter","sort","query","modal","setModal","sortedAndSearchedPosts","arePostsLoading","setPostsAreLoading","fetchPosts","createPost","newPost","getAll","removePost","post","p","id","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","visible","setVisible","create","remove","title","_c","$RefreshReg$"],"sources":["C:/Users/4bul04kka/lunaris/client/src/components/pages/events/Events.jsx"],"sourcesContent":["import React, { useState, useMemo, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./events.css\";\r\nimport PostList from \"../../ui/postform/PostList\";\r\nimport PostForm from \"../../ui/postform/PostForm\";\r\nimport PostFilter from \"../../ui/postform/PostFilter\";\r\nimport MyModal from \"../../ui/modal/MyModal\";\r\nimport MyButton from \"../../ui/button/MyButton\";\r\nimport { usePosts } from \"../../hooks/usePosts\";\r\nimport PostService from \"../../../API/PostService\";\r\n\r\nfunction Events() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [filter, setFilter] = useState({ sort: \"\", query: \"\" });\r\n  const [modal, setModal] = useState(false);\r\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\r\n  const [arePostsLoading, setPostsAreLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const createPost = (newPost) => {\r\n    setPosts([...posts, newPost]);\r\n    setModal(false);\r\n  };\r\n\r\n  async function fetchPosts() {\r\n    const posts = await PostService.getAll();\r\n    setPosts(posts);\r\n  }\r\n\r\n  const removePost = (post) => {\r\n    setPosts(posts.filter((p) => p.id !== post.id));\r\n  };\r\n\r\n  return (\r\n    <div className='events'>\r\n      <div className='container'>\r\n        <div>\r\n          <MyButton onClick={fetchPosts}>Запросить посты</MyButton>\r\n          <MyButton onClick={() => setModal(true)}>Создать новость</MyButton>\r\n          <MyModal visible={modal} setVisible={setModal}>\r\n            <PostForm create={createPost} />\r\n          </MyModal>\r\n          <PostFilter filter={filter} setFilter={setFilter} />\r\n          <PostList\r\n            remove={removePost}\r\n            posts={sortedAndSearchedPosts}\r\n            title={\"Новости и мероприятия\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Events;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}