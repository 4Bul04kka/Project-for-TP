{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\4bul04kka\\\\lunaris\\\\client\\\\src\\\\components\\\\pages\\\\events\\\\Events.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./events.css\";\nimport PostList from \"../../ui/postform/PostList\";\nimport PostForm from \"../../ui/postform/PostForm\";\nimport PostFilter from \"../../ui/postform/PostFilter\";\nimport MyModal from \"../../ui/modal/MyModal\";\nimport MyButton from \"../../ui/button/MyButton\";\nimport { usePosts } from \"../../hooks/usePosts\";\nimport PostService from \"../../../API/PostService\";\nimport Loader from \"../../ui/loader/Loader\";\nimport { useFetching } from \"../../hooks/useFetching\";\nimport { getPageCount, getPageArray } from \"../../../utils/pages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Events() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: \"\",\n    query: \"\"\n  });\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [modal, setModal] = useState(false);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n  let pagesArray = getPageArray(totalPages);\n  const [fetchPosts, arePostsLoading, postError] = useFetching(async () => {\n    const response = await PostService.getAll(limit, page);\n    setPosts(response.data);\n    const totalCount = response.headers[\"x-total-count\"];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n  useEffect(() => {\n    fetchPosts();\n  }, [page]);\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n  const changePage = page => {\n    setPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"events\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MyButton, {\n          onClick: fetchPosts,\n          children: \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n          onClick: () => setModal(true),\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n          visible: modal,\n          setVisible: setModal,\n          children: /*#__PURE__*/_jsxDEV(PostForm, {\n            create: createPost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n          filter: filter,\n          setFilter: setFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), postError && /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 $\", postError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), arePostsLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(PostList, {\n          remove: removePost,\n          posts: sortedAndSearchedPosts,\n          title: \"Новости и мероприятия\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page__wrapper\",\n          children: pagesArray.map(p => /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => changePage(p),\n            className: page === p ? \"page page__current\" : \"page\",\n            children: p\n          }, p, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Events, \"MPlVKlSMRbglyP2xR1p1cYhDMFQ=\", false, function () {\n  return [usePosts, useFetching];\n});\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","Link","PostList","PostForm","PostFilter","MyModal","MyButton","usePosts","PostService","Loader","useFetching","getPageCount","getPageArray","jsxDEV","_jsxDEV","Events","_s","posts","setPosts","filter","setFilter","sort","query","totalPages","setTotalPages","limit","setLimit","page","setPage","modal","setModal","sortedAndSearchedPosts","pagesArray","fetchPosts","arePostsLoading","postError","response","getAll","data","totalCount","headers","createPost","newPost","removePost","post","p","id","changePage","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","visible","setVisible","create","remove","title","map","_c","$RefreshReg$"],"sources":["C:/Users/4bul04kka/lunaris/client/src/components/pages/events/Events.jsx"],"sourcesContent":["import React, { useState, useMemo, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./events.css\";\r\nimport PostList from \"../../ui/postform/PostList\";\r\nimport PostForm from \"../../ui/postform/PostForm\";\r\nimport PostFilter from \"../../ui/postform/PostFilter\";\r\nimport MyModal from \"../../ui/modal/MyModal\";\r\nimport MyButton from \"../../ui/button/MyButton\";\r\nimport { usePosts } from \"../../hooks/usePosts\";\r\nimport PostService from \"../../../API/PostService\";\r\nimport Loader from \"../../ui/loader/Loader\";\r\nimport { useFetching } from \"../../hooks/useFetching\";\r\nimport { getPageCount, getPageArray } from \"../../../utils/pages\";\r\n\r\nfunction Events() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [filter, setFilter] = useState({ sort: \"\", query: \"\" });\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [modal, setModal] = useState(false);\r\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\r\n  let pagesArray = getPageArray(totalPages);\r\n\r\n  const [fetchPosts, arePostsLoading, postError] = useFetching(async () => {\r\n    const response = await PostService.getAll(limit, page);\r\n    setPosts(response.data);\r\n    const totalCount = response.headers[\"x-total-count\"];\r\n    setTotalPages(getPageCount(totalCount, limit));\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, [page]);\r\n\r\n  const createPost = (newPost) => {\r\n    setPosts([...posts, newPost]);\r\n    setModal(false);\r\n  };\r\n\r\n  const removePost = (post) => {\r\n    setPosts(posts.filter((p) => p.id !== post.id));\r\n  };\r\n\r\n  const changePage = (page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  return (\r\n    <div className='events'>\r\n      <div className='container'>\r\n        <div>\r\n          <MyButton onClick={fetchPosts}>Запросить посты</MyButton>\r\n          <MyButton onClick={() => setModal(true)}>Создать новость</MyButton>\r\n          <MyModal visible={modal} setVisible={setModal}>\r\n            <PostForm create={createPost} />\r\n          </MyModal>\r\n          <PostFilter filter={filter} setFilter={setFilter} />\r\n          {postError && <h1> Произошла ошибка ${postError}</h1>}\r\n          {arePostsLoading ? (\r\n            <div className='loading'>\r\n              <Loader />\r\n            </div>\r\n          ) : (\r\n            <PostList\r\n              remove={removePost}\r\n              posts={sortedAndSearchedPosts}\r\n              title={\"Новости и мероприятия\"}\r\n            />\r\n          )}\r\n          <div className='page__wrapper'>\r\n            {pagesArray.map((p) => (\r\n              <span\r\n                onClick={() => changePage(p)}\r\n                key={p}\r\n                className={page === p ? \"page page__current\" : \"page\"}\r\n              >\r\n                {p}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Events;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,QAAQ,OAAO;AAC3D,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,cAAc;AACrB,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,YAAY,EAAEC,YAAY,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC;IAAEuB,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EAC7D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC6B,IAAI,EAAEC,OAAO,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAAC+B,KAAK,EAAEC,QAAQ,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAMiC,sBAAsB,GAAGxB,QAAQ,CAACU,KAAK,EAAEE,MAAM,CAACE,IAAI,EAAEF,MAAM,CAACG,KAAK,CAAC;EACzE,IAAIU,UAAU,GAAGpB,YAAY,CAACW,UAAU,CAAC;EAEzC,MAAM,CAACU,UAAU,EAAEC,eAAe,EAAEC,SAAS,CAAC,GAAGzB,WAAW,CAAC,YAAY;IACvE,MAAM0B,QAAQ,GAAG,MAAM5B,WAAW,CAAC6B,MAAM,CAACZ,KAAK,EAAEE,IAAI,CAAC;IACtDT,QAAQ,CAACkB,QAAQ,CAACE,IAAI,CAAC;IACvB,MAAMC,UAAU,GAAGH,QAAQ,CAACI,OAAO,CAAC,eAAe,CAAC;IACpDhB,aAAa,CAACb,YAAY,CAAC4B,UAAU,EAAEd,KAAK,CAAC,CAAC;EAChD,CAAC,CAAC;EAEFzB,SAAS,CAAC,MAAM;IACdiC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEV,MAAMc,UAAU,GAAIC,OAAO,IAAK;IAC9BxB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEyB,OAAO,CAAC,CAAC;IAC7BZ,QAAQ,CAAC,KAAK,CAAC;EACjB,CAAC;EAED,MAAMa,UAAU,GAAIC,IAAI,IAAK;IAC3B1B,QAAQ,CAACD,KAAK,CAACE,MAAM,CAAE0B,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKF,IAAI,CAACE,EAAE,CAAC,CAAC;EACjD,CAAC;EAED,MAAMC,UAAU,GAAIpB,IAAI,IAAK;IAC3BC,OAAO,CAACD,IAAI,CAAC;EACf,CAAC;EAED,oBACEb,OAAA;IAAKkC,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACrBnC,OAAA;MAAKkC,SAAS,EAAC,WAAW;MAAAC,QAAA,eACxBnC,OAAA;QAAAmC,QAAA,gBACEnC,OAAA,CAACR,QAAQ;UAAC4C,OAAO,EAAEjB,UAAW;UAAAgB,QAAA,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,eACzDxC,OAAA,CAACR,QAAQ;UAAC4C,OAAO,EAAEA,CAAA,KAAMpB,QAAQ,CAAC,IAAI,CAAE;UAAAmB,QAAA,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,eACnExC,OAAA,CAACT,OAAO;UAACkD,OAAO,EAAE1B,KAAM;UAAC2B,UAAU,EAAE1B,QAAS;UAAAmB,QAAA,eAC5CnC,OAAA,CAACX,QAAQ;YAACsD,MAAM,EAAEhB;UAAW;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,eACVxC,OAAA,CAACV,UAAU;UAACe,MAAM,EAAEA,MAAO;UAACC,SAAS,EAAEA;QAAU;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACnDnB,SAAS,iBAAIrB,OAAA;UAAAmC,QAAA,GAAI,gGAAmB,EAACd,SAAS;QAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACpDpB,eAAe,gBACdpB,OAAA;UAAKkC,SAAS,EAAC,SAAS;UAAAC,QAAA,eACtBnC,OAAA,CAACL,MAAM;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,gBAENxC,OAAA,CAACZ,QAAQ;UACPwD,MAAM,EAAEf,UAAW;UACnB1B,KAAK,EAAEc,sBAAuB;UAC9B4B,KAAK,EAAE;QAAwB;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CACF,eACDxC,OAAA;UAAKkC,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC3BjB,UAAU,CAAC4B,GAAG,CAAEf,CAAC,iBAChB/B,OAAA;YACEoC,OAAO,EAAEA,CAAA,KAAMH,UAAU,CAACF,CAAC,CAAE;YAE7BG,SAAS,EAAErB,IAAI,KAAKkB,CAAC,GAAG,oBAAoB,GAAG,MAAO;YAAAI,QAAA,EAErDJ;UAAC,GAHGA,CAAC;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIF,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtC,EAAA,CAvEQD,MAAM;EAAA,QAOkBR,QAAQ,EAGUG,WAAW;AAAA;AAAAmD,EAAA,GAVrD9C,MAAM;AAyEf,eAAeA,MAAM;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}