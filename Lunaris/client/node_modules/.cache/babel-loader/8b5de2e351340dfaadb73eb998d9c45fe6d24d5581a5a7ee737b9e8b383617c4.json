{"ast":null,"code":"import axios from \"axios\";\nexport default class PostService {\n  async getAll(req, res) {\n    try {\n      const limit = parseInt(req.query._limit) || 10;\n      const page = parseInt(req.query._page) || 1;\n      const sort = req.query._sort || \"id\";\n      const order = req.query._order === \"desc\" ? \"desc\" : \"asc\";\n      console.log(`Получение постов: limit=${limit}, page=${page}, sort=${sort}, order=${order}`);\n      const posts = await PostService.getAll(limit, page, sort, order);\n      const totalCount = await PostService.getTotalCount();\n      res.set(\"x-total-count\", totalCount.toString());\n      return res.json(posts);\n    } catch (e) {\n      console.error(\"Ошибка при получении постов:\", e);\n      return res.status(500).json({\n        message: \"Ошибка получения постов\",\n        error: e.message\n      });\n    }\n  }\n  static async getById(id) {\n    console.log(`Запрос на получение поста с ID: ${id}`);\n    try {\n      const response = await axios.get(`http://localhost:3001/api/posts/${id}`);\n      console.log(\"Ответ от API на получение поста:\", response.data);\n      return response.data; // Вернем только данные\n    } catch (error) {\n      var _error$response;\n      console.error(`Ошибка при получении поста с ID ${id}:`, ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw error; // Бросим ошибку дальше, чтобы ее можно было обработать\n    }\n  }\n  static async getImageById(id) {\n    console.log(`Запрос на получение изображения с ID: ${id}`);\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/photos/${id}`);\n    console.log(\"Ответ от API на получение изображения:\", response.data);\n    return response.data; // Вернем только данные\n  }\n  static async createPost(postData) {\n    console.log(\"Создание поста с данными:\", postData);\n    const response = await axios.post(\"http://localhost:3001/api/posts\", postData);\n    console.log(\"Ответ от API на создание поста:\", response.data);\n    return response.data; // Вернем только данные\n  }\n}","map":{"version":3,"names":["axios","PostService","getAll","req","res","limit","parseInt","query","_limit","page","_page","sort","_sort","order","_order","console","log","posts","totalCount","getTotalCount","set","toString","json","e","error","status","message","getById","id","response","get","data","_error$response","getImageById","createPost","postData","post"],"sources":["C:/Users/4bul04kka/lunaris/fork/Project-for-TP/lunaris/client/src/API/PostService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport default class PostService {\r\n  async getAll(req, res) {\r\n    try {\r\n      const limit = parseInt(req.query._limit) || 10;\r\n      const page = parseInt(req.query._page) || 1;\r\n      const sort = req.query._sort || \"id\";\r\n      const order = req.query._order === \"desc\" ? \"desc\" : \"asc\";\r\n\r\n      console.log(\r\n        `Получение постов: limit=${limit}, page=${page}, sort=${sort}, order=${order}`\r\n      );\r\n\r\n      const posts = await PostService.getAll(limit, page, sort, order);\r\n      const totalCount = await PostService.getTotalCount();\r\n\r\n      res.set(\"x-total-count\", totalCount.toString());\r\n      return res.json(posts);\r\n    } catch (e) {\r\n      console.error(\"Ошибка при получении постов:\", e);\r\n      return res\r\n        .status(500)\r\n        .json({ message: \"Ошибка получения постов\", error: e.message });\r\n    }\r\n  }\r\n\r\n  static async getById(id) {\r\n    console.log(`Запрос на получение поста с ID: ${id}`);\r\n\r\n    try {\r\n      const response = await axios.get(`http://localhost:3001/api/posts/${id}`);\r\n      console.log(\"Ответ от API на получение поста:\", response.data);\r\n      return response.data; // Вернем только данные\r\n    } catch (error) {\r\n      console.error(\r\n        `Ошибка при получении поста с ID ${id}:`,\r\n        error.response?.data || error.message\r\n      );\r\n      throw error; // Бросим ошибку дальше, чтобы ее можно было обработать\r\n    }\r\n  }\r\n\r\n  static async getImageById(id) {\r\n    console.log(`Запрос на получение изображения с ID: ${id}`);\r\n\r\n    const response = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/photos/${id}`\r\n    );\r\n    console.log(\"Ответ от API на получение изображения:\", response.data);\r\n    return response.data; // Вернем только данные\r\n  }\r\n\r\n  static async createPost(postData) {\r\n    console.log(\"Создание поста с данными:\", postData);\r\n\r\n    const response = await axios.post(\r\n      \"http://localhost:3001/api/posts\",\r\n      postData\r\n    );\r\n    console.log(\"Ответ от API на создание поста:\", response.data);\r\n    return response.data; // Вернем только данные\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}