{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useMemo } from \"react\";\n\n// Хук для сортировки постов\nexport const useSortedPosts = (posts, sort) => {\n  _s();\n  const sortedPosts = useMemo(() => {\n    if (sort) {\n      return [...posts].sort((a, b) => {\n        var _a$sort;\n        return (_a$sort = a[sort]) === null || _a$sort === void 0 ? void 0 : _a$sort.localeCompare(b[sort]);\n      }); // Optional chaining\n    }\n    return posts;\n  }, [sort, posts]);\n  return sortedPosts;\n};\n\n// Хук для фильтрации и сортировки постов\n_s(useSortedPosts, \"JCOM6shKwCo6CttVuNVxaNMnTKM=\");\nexport const usePosts = (posts = [], sort, query) => {\n  _s2();\n  const sortedPosts = useSortedPosts(posts, sort);\n  const sortedAndSearchedPosts = useMemo(() => {\n    return sortedPosts.filter(post => (post === null || post === void 0 ? void 0 : post.title) && post.title.toLowerCase().includes(query.toLowerCase()) // Optional chaining\n    );\n  }, [query, sortedPosts]);\n  return sortedAndSearchedPosts;\n};\n_s2(usePosts, \"1Y9f2rPptY4OI22k1qpnp57b6n0=\", false, function () {\n  return [useSortedPosts];\n});","map":{"version":3,"names":["React","useMemo","useSortedPosts","posts","sort","_s","sortedPosts","a","b","_a$sort","localeCompare","usePosts","query","_s2","sortedAndSearchedPosts","filter","post","title","toLowerCase","includes"],"sources":["C:/Users/4bul04kka/lunaris/restlun/Project-for-TP/Lunaris/client/src/components/hooks/usePosts.js"],"sourcesContent":["import React, { useMemo } from \"react\";\r\n\r\n// Хук для сортировки постов\r\nexport const useSortedPosts = (posts, sort) => {\r\n  const sortedPosts = useMemo(() => {\r\n    if (sort) {\r\n      return [...posts].sort((a, b) => a[sort]?.localeCompare(b[sort])); // Optional chaining\r\n    }\r\n    return posts;\r\n  }, [sort, posts]);\r\n\r\n  return sortedPosts;\r\n};\r\n\r\n// Хук для фильтрации и сортировки постов\r\nexport const usePosts = (posts = [], sort, query) => {\r\n  const sortedPosts = useSortedPosts(posts, sort);\r\n\r\n  const sortedAndSearchedPosts = useMemo(() => {\r\n    return sortedPosts.filter(\r\n      (post) =>\r\n        post?.title && post.title.toLowerCase().includes(query.toLowerCase()) // Optional chaining\r\n    );\r\n  }, [query, sortedPosts]);\r\n\r\n  return sortedAndSearchedPosts;\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;;AAEtC;AACA,OAAO,MAAMC,cAAc,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;EAAAC,EAAA;EAC7C,MAAMC,WAAW,GAAGL,OAAO,CAAC,MAAM;IAChC,IAAIG,IAAI,EAAE;MACR,OAAO,CAAC,GAAGD,KAAK,CAAC,CAACC,IAAI,CAAC,CAACG,CAAC,EAAEC,CAAC;QAAA,IAAAC,OAAA;QAAA,QAAAA,OAAA,GAAKF,CAAC,CAACH,IAAI,CAAC,cAAAK,OAAA,uBAAPA,OAAA,CAASC,aAAa,CAACF,CAAC,CAACJ,IAAI,CAAC,CAAC;MAAA,EAAC,CAAC,CAAC;IACrE;IACA,OAAOD,KAAK;EACd,CAAC,EAAE,CAACC,IAAI,EAAED,KAAK,CAAC,CAAC;EAEjB,OAAOG,WAAW;AACpB,CAAC;;AAED;AAAAD,EAAA,CAXaH,cAAc;AAY3B,OAAO,MAAMS,QAAQ,GAAGA,CAACR,KAAK,GAAG,EAAE,EAAEC,IAAI,EAAEQ,KAAK,KAAK;EAAAC,GAAA;EACnD,MAAMP,WAAW,GAAGJ,cAAc,CAACC,KAAK,EAAEC,IAAI,CAAC;EAE/C,MAAMU,sBAAsB,GAAGb,OAAO,CAAC,MAAM;IAC3C,OAAOK,WAAW,CAACS,MAAM,CACtBC,IAAI,IACH,CAAAA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,KAAK,KAAID,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,KAAK,CAACM,WAAW,CAAC,CAAC,CAAC,CAAC;IAC1E,CAAC;EACH,CAAC,EAAE,CAACN,KAAK,EAAEN,WAAW,CAAC,CAAC;EAExB,OAAOQ,sBAAsB;AAC/B,CAAC;AAACD,GAAA,CAXWF,QAAQ;EAAA,QACCT,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}