{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\4bul04kka\\\\lunaris\\\\client\\\\src\\\\components\\\\pages\\\\postPage\\\\PostPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PostService from \"../../../API/PostService\";\nimport { useFetching } from \"../../hooks/useFetching\";\nimport Loader from \"../../ui/loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  const params = useParams();\n  const [post, setPost] = useState({});\n  const [image, setImage] = useState({});\n  const [isImageLoaded, setIsImageLoaded] = useState(false); // Track when the image is loaded\n\n  const [fetchPostById, isLoading, postError] = useFetching(async id => {\n    const response = await PostService.getById(id);\n    setPost(response.data);\n  });\n  const [fetchImageById, isImgLoading, imgError] = useFetching(async id => {\n    const response = await PostService.getImageById(id);\n    setImage(response.data);\n  });\n  useEffect(() => {\n    fetchPostById(params.id);\n    fetchImageById(params.id);\n  }, [params.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \\u0441 \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u044C\\u044E ID = \", params.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [post.id, \". \", post.title, \". \", post.body]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), postError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", postError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }, this), isImgLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!isImageLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"200px\",\n          backgroundColor: \"#eee\"\n        },\n        children: \"Loading image...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.url,\n        alt: post.title,\n        loading: \"lazy\",\n        onLoad: () => setIsImageLoaded(true) // When image is loaded, remove the placeholder\n        ,\n        style: {\n          display: isImageLoaded ? \"block\" : \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), imgError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", imgError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(PostPage, \"axlD139CGAwPRqACGd1OsX3+5Fc=\", false, function () {\n  return [useParams, useFetching, useFetching];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","PostService","useFetching","Loader","jsxDEV","_jsxDEV","PostPage","_s","params","post","setPost","image","setImage","isImageLoaded","setIsImageLoaded","fetchPostById","isLoading","postError","id","response","getById","data","fetchImageById","isImgLoading","imgError","getImageById","children","fileName","_jsxFileName","lineNumber","columnNumber","title","body","style","height","backgroundColor","src","url","alt","loading","onLoad","display","_c","$RefreshReg$"],"sources":["C:/Users/4bul04kka/lunaris/client/src/components/pages/postPage/PostPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport PostService from \"../../../API/PostService\";\r\nimport { useFetching } from \"../../hooks/useFetching\";\r\nimport Loader from \"../../ui/loader/Loader\";\r\n\r\nconst PostPage = () => {\r\n  const params = useParams();\r\n  const [post, setPost] = useState({});\r\n  const [image, setImage] = useState({});\r\n  const [isImageLoaded, setIsImageLoaded] = useState(false); // Track when the image is loaded\r\n\r\n  const [fetchPostById, isLoading, postError] = useFetching(async (id) => {\r\n    const response = await PostService.getById(id);\r\n    setPost(response.data);\r\n  });\r\n\r\n  const [fetchImageById, isImgLoading, imgError] = useFetching(async (id) => {\r\n    const response = await PostService.getImageById(id);\r\n    setImage(response.data);\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchPostById(params.id);\r\n    fetchImageById(params.id);\r\n  }, [params.id]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Страница с новостью ID = {params.id}</h1>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div>\r\n          {post.id}. {post.title}. {post.body}\r\n        </div>\r\n      )}\r\n      {postError && <p>Error: {postError}</p>}\r\n\r\n      {isImgLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div>\r\n          {/* Placeholder while the image is loading */}\r\n          {!isImageLoaded && (\r\n            <div style={{ height: \"200px\", backgroundColor: \"#eee\" }}>\r\n              Loading image...\r\n            </div>\r\n          )}\r\n          <img\r\n            src={image.url}\r\n            alt={post.title}\r\n            loading='lazy'\r\n            onLoad={() => setIsImageLoaded(true)} // When image is loaded, remove the placeholder\r\n            style={{ display: isImageLoaded ? \"block\" : \"none\" }}\r\n          />\r\n        </div>\r\n      )}\r\n      {imgError && <p>Error: {imgError}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}