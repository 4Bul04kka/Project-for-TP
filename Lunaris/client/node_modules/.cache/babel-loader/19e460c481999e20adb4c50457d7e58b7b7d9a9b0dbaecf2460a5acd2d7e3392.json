{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\4bul04kka\\\\lunaris\\\\restlun\\\\Project-for-TP\\\\Lunaris\\\\client\\\\src\\\\components\\\\ui\\\\postform\\\\PostForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\"; // Added useState import\nimport MyButton from \"../button/MyButton\";\nimport MyInput from \"../input/MyInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = ({\n  create\n}) => {\n  _s();\n  const [post, setPost] = useState({\n    title: \"\",\n    body: \"\",\n    image: \"\"\n  });\n  const addNewPost = async e => {\n    e.preventDefault();\n    try {\n      const newPost = {\n        title: post.title,\n        description: post.description,\n        body: post.body,\n        image: post.image\n      };\n      // Передаем новый пост через create функцию\n      await create(newPost);\n      // Сбрасываем поля формы\n      setPost({\n        title: \"\",\n        description: \"\",\n        body: \"\",\n        image: \"\"\n      });\n    } catch (error) {\n      console.error(\"Ошибка при создании поста:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(MyInput, {\n      value: post.title,\n      onChange: e => setPost({\n        ...post,\n        title: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: post.description,\n      onChange: e => setPost({\n        ...post,\n        tdescriptionitle: e.description.value\n      }),\n      type: \"text\",\n      placeholder: \"\\u041F\\u043E\\u0434\\u0437\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: post.body,\n      onChange: e => setPost({\n        ...post,\n        body: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"\\u0421\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u043D\\u0438\\u0435 \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: post.image,\n      onChange: e => setPost({\n        ...post,\n        image: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"URL \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: addNewPost,\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"3EfLcRUsamE8iSgcSgtTzTKkiaI=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","MyButton","MyInput","jsxDEV","_jsxDEV","PostForm","create","_s","post","setPost","title","body","image","addNewPost","e","preventDefault","newPost","description","error","console","children","value","onChange","target","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","tdescriptionitle","onClick","_c","$RefreshReg$"],"sources":["C:/Users/4bul04kka/lunaris/restlun/Project-for-TP/Lunaris/client/src/components/ui/postform/PostForm.jsx"],"sourcesContent":["import React, { useState } from \"react\"; // Added useState import\r\nimport MyButton from \"../button/MyButton\";\r\nimport MyInput from \"../input/MyInput\";\r\n\r\nconst PostForm = ({ create }) => {\r\n  const [post, setPost] = useState({ title: \"\", body: \"\", image: \"\" });\r\n\r\n  const addNewPost = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newPost = {\r\n        title: post.title,\r\n        description: post.description,\r\n        body: post.body,\r\n        image: post.image,\r\n      };\r\n      // Передаем новый пост через create функцию\r\n      await create(newPost);\r\n      // Сбрасываем поля формы\r\n      setPost({ title: \"\", description: \"\", body: \"\", image: \"\" });\r\n    } catch (error) {\r\n      console.error(\"Ошибка при создании поста:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <MyInput\r\n        value={post.title}\r\n        onChange={(e) => setPost({ ...post, title: e.target.value })}\r\n        type='text'\r\n        placeholder='Заголовок новости'\r\n      />\r\n\r\n      <MyInput\r\n        value={post.description}\r\n        onChange={(e) =>\r\n          setPost({ ...post, tdescriptionitle: e.description.value })\r\n        }\r\n        type='text'\r\n        placeholder='Подзаголовок новости'\r\n      />\r\n      <MyInput\r\n        value={post.body}\r\n        onChange={(e) => setPost({ ...post, body: e.target.value })}\r\n        type='text'\r\n        placeholder='Содержание новости'\r\n      />\r\n      <MyInput\r\n        value={post.image}\r\n        onChange={(e) => setPost({ ...post, image: e.target.value })}\r\n        type='text'\r\n        placeholder='URL изображения'\r\n      />\r\n      <MyButton onClick={addNewPost}>Создать новость</MyButton>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}