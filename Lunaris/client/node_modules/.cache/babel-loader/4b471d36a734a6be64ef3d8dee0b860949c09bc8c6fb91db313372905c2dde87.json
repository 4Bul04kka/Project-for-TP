{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport const useFetching = callback => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const fetching = async (...args) => {\n    try {\n      setIsLoading(true);\n      await callback(...args);\n    } catch (e) {\n      setError(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return [fetching, isLoading, error];\n};\n_s(useFetching, \"KZQa7J2JS0Fg7SlrlJCvKl+LgTY=\");","map":{"version":3,"names":["useState","useFetching","callback","_s","isLoading","setIsLoading","error","setError","fetching","args","e","message"],"sources":["C:/Users/4bul04kka/lunaris/restlun/Project-for-TP/Lunaris/client/src/components/hooks/useFetching.js"],"sourcesContent":["import { useState } from \"react\";\r\nexport const useFetching = (callback) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const fetching = async (...args) => {\r\n    try {\r\n      setIsLoading(true);\r\n      await callback(...args);\r\n    } catch (e) {\r\n      setError(e.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  return [fetching, isLoading, error];\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,MAAMC,WAAW,GAAIC,QAAQ,IAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,QAAQ,GAAG,MAAAA,CAAO,GAAGC,IAAI,KAAK;IAClC,IAAI;MACFJ,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMH,QAAQ,CAAC,GAAGO,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVH,QAAQ,CAACG,CAAC,CAACC,OAAO,CAAC;IACrB,CAAC,SAAS;MACRN,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EACD,OAAO,CAACG,QAAQ,EAAEJ,SAAS,EAAEE,KAAK,CAAC;AACrC,CAAC;AAACH,EAAA,CAfWF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}