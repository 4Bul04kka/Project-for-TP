{"ast":null,"code":"import axios from \"axios\";\nexport default class PostService {\n  static async getAll(limit = 5, page = 1) {\n    console.log(`Запрос к API: http://localhost:3001/posts?_limit=${limit}&_page=${page}&_sort=id&_order=desc`);\n    try {\n      const response = await axios.get(\"http://localhost:3001/api/posts\", {\n        params: {\n          _limit: limit,\n          _page: page,\n          _sort: \"id\",\n          // Сортировка по 'id'\n          _order: \"desc\" // По убыванию\n        }\n      });\n      console.log(\"Ответ от API:\", response.data);\n      console.log(\"Заголовки ответа:\", response.headers);\n      return response; // Вернем только данные\n    } catch (error) {\n      var _error$response;\n      console.error(\"Ошибка при получении постов:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw error; // Бросим ошибку дальше, чтобы ее можно было обработать\n    }\n  }\n  static async getById(id) {\n    console.log(`Запрос на получение поста с ID: ${id}`);\n    try {\n      const response = await axios.get(`http://localhost:3001/api/posts/${id}`);\n      console.log(\"Ответ от API на получение поста:\", response.data);\n      return response.data; // Вернем только данные\n    } catch (error) {\n      var _error$response2;\n      console.error(`Ошибка при получении поста с ID ${id}:`, ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      throw error; // Бросим ошибку дальше, чтобы ее можно было обработать\n    }\n  }\n  static async getImageById(id) {\n    console.log(`Запрос на получение изображения с ID: ${id}`);\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/photos/${id}`);\n    console.log(\"Ответ от API на получение изображения:\", response.data);\n    return response.data; // Вернем только данные\n  }\n  static async createPost(postData) {\n    console.log(\"Создание поста с данными:\", postData);\n    const response = await axios.post(\"http://localhost:3001/api/posts\", postData);\n    console.log(\"Ответ от API на создание поста:\", response.data);\n    return response.data; // Вернем только данные\n  }\n}","map":{"version":3,"names":["axios","PostService","getAll","limit","page","console","log","response","get","params","_limit","_page","_sort","_order","data","headers","error","_error$response","message","getById","id","_error$response2","getImageById","createPost","postData","post"],"sources":["C:/Users/4bul04kka/lunaris/fork/Project-for-TP/lunaris/client/src/API/PostService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport default class PostService {\r\n  static async getAll(limit = 5, page = 1) {\r\n    console.log(\r\n      `Запрос к API: http://localhost:3001/posts?_limit=${limit}&_page=${page}&_sort=id&_order=desc`\r\n    );\r\n\r\n    try {\r\n      const response = await axios.get(\"http://localhost:3001/api/posts\", {\r\n        params: {\r\n          _limit: limit,\r\n          _page: page,\r\n          _sort: \"id\", // Сортировка по 'id'\r\n          _order: \"desc\", // По убыванию\r\n        },\r\n      });\r\n      console.log(\"Ответ от API:\", response.data);\r\n      console.log(\"Заголовки ответа:\", response.headers);\r\n      return response; // Вернем только данные\r\n    } catch (error) {\r\n      console.error(\r\n        \"Ошибка при получении постов:\",\r\n        error.response?.data || error.message\r\n      );\r\n      throw error; // Бросим ошибку дальше, чтобы ее можно было обработать\r\n    }\r\n  }\r\n\r\n  static async getById(id) {\r\n    console.log(`Запрос на получение поста с ID: ${id}`);\r\n\r\n    try {\r\n      const response = await axios.get(`http://localhost:3001/api/posts/${id}`);\r\n      console.log(\"Ответ от API на получение поста:\", response.data);\r\n      return response.data; // Вернем только данные\r\n    } catch (error) {\r\n      console.error(\r\n        `Ошибка при получении поста с ID ${id}:`,\r\n        error.response?.data || error.message\r\n      );\r\n      throw error; // Бросим ошибку дальше, чтобы ее можно было обработать\r\n    }\r\n  }\r\n\r\n  static async getImageById(id) {\r\n    console.log(`Запрос на получение изображения с ID: ${id}`);\r\n\r\n    const response = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/photos/${id}`\r\n    );\r\n    console.log(\"Ответ от API на получение изображения:\", response.data);\r\n    return response.data; // Вернем только данные\r\n  }\r\n\r\n  static async createPost(postData) {\r\n    console.log(\"Создание поста с данными:\", postData);\r\n\r\n    const response = await axios.post(\r\n      \"http://localhost:3001/api/posts\",\r\n      postData\r\n    );\r\n    console.log(\"Ответ от API на создание поста:\", response.data);\r\n    return response.data; // Вернем только данные\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAe,MAAMC,WAAW,CAAC;EAC/B,aAAaC,MAAMA,CAACC,KAAK,GAAG,CAAC,EAAEC,IAAI,GAAG,CAAC,EAAE;IACvCC,OAAO,CAACC,GAAG,CACR,oDAAmDH,KAAM,UAASC,IAAK,uBAC1E,CAAC;IAED,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,iCAAiC,EAAE;QAClEC,MAAM,EAAE;UACNC,MAAM,EAAEP,KAAK;UACbQ,KAAK,EAAEP,IAAI;UACXQ,KAAK,EAAE,IAAI;UAAE;UACbC,MAAM,EAAE,MAAM,CAAE;QAClB;MACF,CAAC,CAAC;MACFR,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,QAAQ,CAACO,IAAI,CAAC;MAC3CT,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,QAAQ,CAACQ,OAAO,CAAC;MAClD,OAAOR,QAAQ,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOS,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdZ,OAAO,CAACW,KAAK,CACX,8BAA8B,EAC9B,EAAAC,eAAA,GAAAD,KAAK,CAACT,QAAQ,cAAAU,eAAA,uBAAdA,eAAA,CAAgBH,IAAI,KAAIE,KAAK,CAACE,OAChC,CAAC;MACD,MAAMF,KAAK,CAAC,CAAC;IACf;EACF;EAEA,aAAaG,OAAOA,CAACC,EAAE,EAAE;IACvBf,OAAO,CAACC,GAAG,CAAE,mCAAkCc,EAAG,EAAC,CAAC;IAEpD,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAE,mCAAkCY,EAAG,EAAC,CAAC;MACzEf,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEC,QAAQ,CAACO,IAAI,CAAC;MAC9D,OAAOP,QAAQ,CAACO,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;MAAA,IAAAK,gBAAA;MACdhB,OAAO,CAACW,KAAK,CACV,mCAAkCI,EAAG,GAAE,EACxC,EAAAC,gBAAA,GAAAL,KAAK,CAACT,QAAQ,cAAAc,gBAAA,uBAAdA,gBAAA,CAAgBP,IAAI,KAAIE,KAAK,CAACE,OAChC,CAAC;MACD,MAAMF,KAAK,CAAC,CAAC;IACf;EACF;EAEA,aAAaM,YAAYA,CAACF,EAAE,EAAE;IAC5Bf,OAAO,CAACC,GAAG,CAAE,yCAAwCc,EAAG,EAAC,CAAC;IAE1D,MAAMb,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAC7B,+CAA8CY,EAAG,EACpD,CAAC;IACDf,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEC,QAAQ,CAACO,IAAI,CAAC;IACpE,OAAOP,QAAQ,CAACO,IAAI,CAAC,CAAC;EACxB;EAEA,aAAaS,UAAUA,CAACC,QAAQ,EAAE;IAChCnB,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEkB,QAAQ,CAAC;IAElD,MAAMjB,QAAQ,GAAG,MAAMP,KAAK,CAACyB,IAAI,CAC/B,iCAAiC,EACjCD,QACF,CAAC;IACDnB,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEC,QAAQ,CAACO,IAAI,CAAC;IAC7D,OAAOP,QAAQ,CAACO,IAAI,CAAC,CAAC;EACxB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}